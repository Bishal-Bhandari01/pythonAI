import pyttsx3import speech_recognition as srimport datetimeimport wikipediaimport webbrowserimport osimport smtplib# smtplib package help us to request and response mail modulesimport pywhatkitimport pyjokes# pyttsx3 stands for python text to speech version 3# sapi5 is the voice module of the computer.engine = pyttsx3.init('sapi5')voices = engine.getProperty('voices')# voices[0] is the male voice# voices[1] is the female voice# print(voices[1].id)engine.setProperty('voice', voices[1].id)def speak(audio):    # In this function, we give our AI to speak.    engine.say(audio)    engine.runAndWait()def wishMe():    #In this function, AI will check the    # correct time and wish us.    hour = int(datetime.datetime.now().hour)    # In this hour variable, we will declare     #what's the time right now.    # datetime.datetime.now() help the code to    # check the hour and execute the below code.        # we are using ladder ifelse statement.    if hour>=0 and hour<12:        # In this condition, it will check the hour         #variable and it will check and if it will meet the condition it will         #execute the statement other wise it will leave        # and execute below condition.        speak("Good Morning! sir")        # speak is just like print but instead of showing        # in text it will speak and greet you.    elif hour>=12 and hour<18:        speak("Good Afternoon! sir")    else:        speak("Good Evening! sir")    speak("How may I help you sir")def takeCommand():    # It takes microphone input from the user and returns string output    r = sr.Recognizer()    with sr.Microphone() as source:        print("Listening...")        r.pause_threshold = 1        audio = r.listen(source)    try:        print("Recognizing...")        query = r.recognize_google(audio, language='en-in')        print(f"User said: {query}\n")    except Exception:        # print(Exception)        print("Say that again please...")        return "None"    return querydef sendEmail(to, content):    server = smtplib.SMTP('smntp.gmail.com', 587)    server.starttls()    server.login('youremail@gmail.com', 'your-password')    server.sendmaildef runfriday():    wishMe()    query = takeCommand().lower()    # Logic for executing tasks based on query        if 'wikipedia' in query:            speak('Searching Wikipedia...')            query = query.replace("wikipedia", "")            results = wikipedia.summary(query, sentences=4)            speak("According to wikipedia")            print(results)            speak(results)	        elif 'open youtube' in query:	            webbrowser.open("youtube.com")	        elif 'Google' in query:	            webbrowser.open("google.com")	            speak('Searching google...')	            query = Google.summary(query, sentences=16)	            speak("Acording to Google")	            print(results)	            speak(results)		        elif 'the time' in query:	            strtime = datetime.datetime.now().strftime("%H:%M:%S")	            speak(f"Sir, The time is {strtime}")		        elif 'email to james' in query:	            try:	                speak("What should I say?")	                content = takeCommand()	                to = "jamesyourEmail@gmail.com"	                sendEmail(to, content)	                speak("Email has been sent!")	            except Exception as e:	                print(e)	                speak("Sorry Sir. I am unable to send this email")		        elif 'open facebook' in query:	            webbrowser.open("facebook.com")	            	        elif 'open github' in query:	            webbrowser.open("github.com")		        elif 'open Gmail' in query:	            webbrowser.open("mail.google.com")		        elif 'need help' in query:	            speak('Hello sir. How can I help you?')	            results = speak	            print(results)	            speak(results)	            	        elif 'play' in query:		        song = query.replace('play', '')		        speak('playing ' + song)		        pywhatkit.playonyt(song)		        		    elif 'who the heck is' in query:	       	 speak('Searching Wikipedia...')	            query = query.replace("who the heck is", "")	            results = wikipedia.summary(query, sentences=4)	            speak("According to wikipedia")	            print(results)	            speak(results)		        			elif 'date' in query:	        	speak('sorry, I have a headache')		    	elif 'are you single' in query:	       	 speak('I am in a relationship with wifi')	       	 	    	elif 'joke' in query:	        	speak(pyjokes.get_joke())                else:        	speak("Please try again, I can't understand your language")       	 while True:	return runfriday()